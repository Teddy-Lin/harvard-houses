{"ast":null,"code":"var _jsxFileName = \"/Users/teddylin/Desktop/harvard-houses/pages/comments/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from './comments.module.css';\nexport default class CommentBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showComments: false,\n      comments: [{\n        id: 1,\n        author: \"landiggity\",\n        body: \"This is my first comment on this forum so don't be a dick\"\n      }, {\n        id: 2,\n        author: \"scarlett-jo\",\n        body: \"That's a mighty fine comment you've got there my good looking fellow...\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }]\n    };\n  }\n\n  render() {\n    const comments = this.getComments();\n    let commentNodes;\n    let buttonText = 'Show Comments';\n\n    if (this.state.showComments) {\n      buttonText = 'Hide Comments';\n      commentNodes = __jsx(\"div\", {\n        className: \"comment-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 22\n        }\n      }, comments);\n    }\n\n    return __jsx(\"div\", {\n      className: \"comment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Join the Discussion!\"), __jsx(CommentForm, {\n      addComment: this.addComment.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), __jsx(\"button\", {\n      id: \"comment-reveal\",\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, buttonText), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Comments\"), __jsx(\"h4\", {\n      className: \"comment-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, this.getCommentsTitle(comments.length)), commentNodes);\n  } // end render\n\n\n  addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  getComments() {\n    return this.state.comments.map(comment => {\n      return __jsx(Comment, {\n        author: comment.author,\n        body: comment.body,\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n\n} // end CommentBox component\n\nclass CommentForm extends React.Component {\n  render() {\n    return __jsx(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this.handleSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"comment-form-fields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      placeholder: \"Name\",\n      required: true,\n      ref: input => this.author = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 91\n      }\n    }), __jsx(\"textarea\", {\n      placeholder: \"Comment\",\n      rows: \"4\",\n      required: true,\n      ref: textarea => this.body = textarea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"comment-form-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Post Comment\")));\n  } // end render\n\n\n  handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n\n    let author = this.author;\n    let body = this.body;\n    this.props.addComment(author.value, body.value);\n  }\n\n} // end CommentForm component\n\n\nclass Comment extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      className: \"comment-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, this.props.author), __jsx(\"p\", {\n      className: \"comment-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, this.props.body), __jsx(\"div\", {\n      className: \"comment-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"comment-footer-delete\",\n      onClick: this.deleteComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Delete Comment\")));\n  }\n\n  deleteComment() {\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n  }\n\n}","map":{"version":3,"sources":["/Users/teddylin/Desktop/harvard-houses/pages/comments/index.js"],"names":["React","styles","CommentBox","Component","constructor","state","showComments","comments","id","author","body","render","getComments","commentNodes","buttonText","addComment","bind","handleClick","getCommentsTitle","length","comment","setState","concat","map","commentCount","CommentForm","handleSubmit","input","textarea","event","preventDefault","props","value","Comment","deleteComment","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './comments.module.css';\n\nexport default class CommentBox extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showComments: false,\n      comments: [\n        {id: 1, author: \"landiggity\", body: \"This is my first comment on this forum so don't be a dick\"},\n        {id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\"},\n        {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"}\n      ]\n    };\n  }\n\n  render () {\n    const comments = this.getComments();\n    let commentNodes;\n    let buttonText = 'Show Comments';\n\n    if (this.state.showComments) {\n      buttonText = 'Hide Comments';\n      commentNodes = <div className=\"comment-list\">{comments}</div>;\n    }\n\n    return(\n      <div className=\"comment-box\">\n        <h2>Join the Discussion!</h2>\n        <CommentForm addComment={this.addComment.bind(this)}/>\n        <button id=\"comment-reveal\" onClick={this.handleClick.bind(this)}>\n          {buttonText}\n        </button>\n        <h3>Comments</h3>\n        <h4 className=\"comment-count\">\n          {this.getCommentsTitle(comments.length)}\n        </h4>\n        {commentNodes}\n      </div>\n    );\n  } // end render\n\n  addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  getComments() {\n    return this.state.comments.map((comment) => {\n      return (\n        <Comment\n          author={comment.author}\n          body={comment.body}\n          key={comment.id} />\n      );\n    });\n  }\n\n  getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n} // end CommentBox component\n\nclass CommentForm extends React.Component {\n  render() {\n    return (\n      <form className=\"comment-form\" onSubmit={this.handleSubmit.bind(this)}>\n        <div className=\"comment-form-fields\">\n          <input placeholder=\"Name\" required ref={(input) => this.author = input}></input><br />\n          <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this.body = textarea}></textarea>\n        </div>\n        <div className=\"comment-form-actions\">\n          <button type=\"submit\">Post Comment</button>\n        </div>\n      </form>\n    );\n  } // end render\n\n  handleSubmit(event) {\n    event.preventDefault();   // prevents page from reloading on submit\n    let author = this.author;\n    let body = this.body;\n    this.props.addComment(author.value, body.value);\n  }\n} // end CommentForm component\n\nclass Comment extends React.Component {\n  render () {\n    return(\n      <div className=\"comment\">\n        <p className=\"comment-header\">{this.props.author}</p>\n        <p className=\"comment-body\">{this.props.body}</p>\n        <div className=\"comment-footer\">\n          <a href=\"#\" className=\"comment-footer-delete\" onClick={this.deleteComment}>Delete Comment</a>\n        </div>\n      </div>\n    );\n  }\n  deleteComment() {\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}