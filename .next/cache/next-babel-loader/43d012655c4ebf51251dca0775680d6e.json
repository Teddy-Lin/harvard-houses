{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/teddylin/Desktop/harvard-houses/components/commentbox.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport CommentBox from 'react-commentbox';\n\nvar MyCommentBox = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyCommentBox, _React$Component);\n\n  var _super = _createSuper(MyCommentBox);\n\n  function MyCommentBox() {\n    var _this;\n\n    _classCallCheck(this, MyCommentBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      authorName: '',\n      authorNameIsSet: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeAuthorName\", function (e) {\n      return _this.setState({\n        authorName: e.currentTarget.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitAuthorName\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        authorNameIsSet: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"normalizeComment\", function (comment) {\n      var _comment$sys = comment.sys,\n          id = _comment$sys.id,\n          createdAt = _comment$sys.createdAt;\n      var _comment$fields = comment.fields,\n          body = _comment$fields.body,\n          author = _comment$fields.author,\n          parentComment = _comment$fields.parentComment;\n      return {\n        id: id,\n        bodyDisplay: body,\n        userNameDisplay: author,\n        timestampDisplay: createdAt.split('T')[0],\n        belongsToAuthor: false,\n        parentCommentId: parentComment ? parentComment.sys.id : null\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"comment\", function (body, parentCommentId) {\n      return _this.props.postData('/create-comment', {\n        body: body,\n        parentCommentId: parentCommentId,\n        authorName: _this.state.authorName,\n        subjectId: _this.props.subjectId\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disabledComponent\", function (props) {\n      return __jsx(\"form\", {\n        onSubmit: _this.onSubmitAuthorName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name to post a comment\",\n        value: _this.state.authorName,\n        onChange: _this.onChangeAuthorName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"Submit\"));\n    });\n\n    return _this;\n  }\n\n  _createClass(MyCommentBox, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, __jsx(CommentBox, {\n        disabled: !this.state.authorNameIsSet,\n        getComments: this.getComments,\n        normalizeComment: this.normalizeComment,\n        comment: this.comment,\n        disabledComponent: this.disabledComponent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return MyCommentBox;\n}(React.Component);\n\nexport { MyCommentBox as default };","map":{"version":3,"sources":["/Users/teddylin/Desktop/harvard-houses/components/commentbox.js"],"names":["React","CommentBox","MyCommentBox","authorName","authorNameIsSet","e","setState","currentTarget","value","preventDefault","comment","sys","id","createdAt","fields","body","author","parentComment","bodyDisplay","userNameDisplay","timestampDisplay","split","belongsToAuthor","parentCommentId","props","postData","state","subjectId","onSubmitAuthorName","onChangeAuthorName","getComments","normalizeComment","disabledComponent","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;IAEqBC,Y;;;;;;;;;;;;;;;;4DAET;AAAEC,MAAAA,UAAU,EAAE,EAAd;AAAkBC,MAAAA,eAAe,EAAE;AAAnC,K;;yEAEa,UAACC,CAAD;AAAA,aAAO,MAAKC,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAEE,CAAC,CAACE,aAAF,CAAgBC;AAA9B,OAAd,CAAP;AAAA,K;;yEAEA,UAACH,CAAD,EAAO;AAExBA,MAAAA,CAAC,CAACI,cAAF;;AACA,YAAKH,QAAL,CAAc;AAAEF,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACH,K;;uEAiBkB,UAACM,OAAD,EAAa;AAAA,yBAEFA,OAAO,CAACC,GAFN;AAAA,UAEpBC,EAFoB,gBAEpBA,EAFoB;AAAA,UAEhBC,SAFgB,gBAEhBA,SAFgB;AAAA,4BAGYH,OAAO,CAACI,MAHpB;AAAA,UAGpBC,IAHoB,mBAGpBA,IAHoB;AAAA,UAGdC,MAHc,mBAGdA,MAHc;AAAA,UAGNC,aAHM,mBAGNA,aAHM;AAK5B,aAAO;AACHL,QAAAA,EAAE,EAAFA,EADG;AAEHM,QAAAA,WAAW,EAAEH,IAFV;AAGHI,QAAAA,eAAe,EAAEH,MAHd;AAIHI,QAAAA,gBAAgB,EAAEP,SAAS,CAACQ,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAJf;AAKHC,QAAAA,eAAe,EAAE,KALd;AAMHC,QAAAA,eAAe,EAAEN,aAAa,GAAGA,aAAa,CAACN,GAAd,CAAkBC,EAArB,GAA0B;AANrD,OAAP;AAQH,K;;8DAGS,UAACG,IAAD,EAAOQ,eAAP,EAA2B;AAEjC,aAAO,MAAKC,KAAL,CAAWC,QAAX,CAAoB,iBAApB,EAAuC;AAC1CV,QAAAA,IAAI,EAAJA,IAD0C;AAE1CQ,QAAAA,eAAe,EAAfA,eAF0C;AAG1CpB,QAAAA,UAAU,EAAE,MAAKuB,KAAL,CAAWvB,UAHmB;AAI1CwB,QAAAA,SAAS,EAAE,MAAKH,KAAL,CAAWG;AAJoB,OAAvC,CAAP;AAMH,K;;wEAGmB,UAACH,KAAD,EAAW;AAE3B,aACI;AAAM,QAAA,QAAQ,EAAG,MAAKI,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,mCAFhB;AAGI,QAAA,KAAK,EAAG,MAAKF,KAAL,CAAWvB,UAHvB;AAII,QAAA,QAAQ,EAAG,MAAK0B,kBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CADJ;AAWH,K;;;;;;;6BAEQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AACI,QAAA,QAAQ,EAAG,CAAC,KAAKH,KAAL,CAAWtB,eAD3B;AAEI,QAAA,WAAW,EAAG,KAAK0B,WAFvB;AAGI,QAAA,gBAAgB,EAAG,KAAKC,gBAH5B;AAII,QAAA,OAAO,EAAG,KAAKrB,OAJnB;AAKI,QAAA,iBAAiB,EAAG,KAAKsB,iBAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAWH;;;;EAlFqChC,KAAK,CAACiC,S;;SAA3B/B,Y","sourcesContent":["import React from 'react';\nimport CommentBox from 'react-commentbox';\n\nexport default class MyCommentBox extends React.Component {\n\n    state = { authorName: '', authorNameIsSet: false };\n\n    onChangeAuthorName = (e) => this.setState({ authorName: e.currentTarget.value });\n\n    onSubmitAuthorName = (e) => {\n\n        e.preventDefault();\n        this.setState({ authorNameIsSet: true });\n    };\n\n    // fetch our comments from Contentful\n    // getComments = () => {\n    //\n    //     return this.props.contentfulClient.getEntries({\n    //         'order': 'sys.createdAt', // important for determining nested comments\n    //         'content_type': 'comment',\n    //         'fields.subject': this.props.subjectId,\n    //     }).then( response => {\n    //\n    //         return response.items;\n    //\n    //     }).catch(console.error);\n    // };\n\n    // transform Contentful entries to objects that react-commentbox expects.\n    normalizeComment = (comment) => {\n\n        const { id, createdAt } = comment.sys;\n        const { body, author, parentComment } = comment.fields;\n\n        return {\n            id,\n            bodyDisplay: body,\n            userNameDisplay: author,\n            timestampDisplay: createdAt.split('T')[0],\n            belongsToAuthor: false,\n            parentCommentId: parentComment ? parentComment.sys.id : null\n        };\n    };\n\n    // make an API call to post a comment\n    comment = (body, parentCommentId) => {\n\n        return this.props.postData('/create-comment', {\n            body,\n            parentCommentId,\n            authorName: this.state.authorName,\n            subjectId: this.props.subjectId\n        });\n    };\n\n    // will be shown when the comment box is disabled\n    disabledComponent = (props) => {\n\n        return (\n            <form onSubmit={ this.onSubmitAuthorName }>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter your name to post a comment\"\n                    value={ this.state.authorName }\n                    onChange={ this.onChangeAuthorName }\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        );\n    };\n\n    render() {\n\n        return (\n            <div>\n                <CommentBox\n                    disabled={ !this.state.authorNameIsSet }\n                    getComments={ this.getComments }\n                    normalizeComment={ this.normalizeComment }\n                    comment={ this.comment }\n                    disabledComponent={ this.disabledComponent }\n                />\n            </div>\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}