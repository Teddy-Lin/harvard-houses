{"ast":null,"code":"var _jsxFileName = \"/Users/teddylin/Desktop/harvard-houses/pages/comments/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nlet ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;\n\nclass CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data\n    };\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      success: data => {\n        this.setState({\n          data: data\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(this.props.url, status, err.toString());\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer(); // Disabled Polling because the 'server' never updates\n    // it is just a static file with two comments\n    // setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n  }\n\n  handleCommentSubmit(comment) {\n    let comments = this.state.data;\n    let newComments = comments.concat([comment]);\n    this.setState({\n      data: newComments\n    });\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      type: 'POST',\n      data: comment,\n      success: data => {\n        this.setState({\n          data: data\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(this.proprs.url, status, err.toString());\n      }\n    });\n  }\n\n  handleDelete(index) {\n    let comments = this.state.data;\n    comments.splice(index, 1);\n    this.setState({\n      data: comments\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"col-xs-10 col-xs-offset-1 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(CommentForm, {\n      onCommentSubmit: this.handleCommentSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), __jsx(CommentList, {\n      data: this.state.data,\n      handleDelete: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass CommentForm extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = this.setState({\n      author: '',\n      text: ''\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.text || !this.state.author) {\n      return;\n    }\n\n    this.props.onCommentSubmit({\n      author: this.state.author.trim(),\n      text: this.state.text.trim()\n    });\n    this.setState({\n      author: '',\n      text: ''\n    });\n    return;\n  }\n\n  render() {\n    return __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"row Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Comments\")), __jsx(\"div\", {\n      className: \"col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"Your name\",\n      name: \"author\",\n      onChange: this.onChange,\n      ref: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"Say something...\",\n      name: \"text\",\n      onChange: this.onChange,\n      ref: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"submit\",\n      value: \"Post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nclass CommentList extends React.Component {\n  render() {\n    let handleDelete = this.props.handleDelete;\n    let commentNodes = this.props.data.map((comment, i) => {\n      return __jsx(Comment, {\n        author: comment.author,\n        keyValue: i,\n        handleDelete: handleDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, comment.text);\n    });\n    return __jsx(ReactCSSTransitionGroup, {\n      transitionName: \"example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, commentNodes);\n  }\n\n}\n\n;\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleDelete() {\n    this.props.handleDelete(this.props.keyValue);\n  }\n\n  render() {\n    let rawMarkup = marked(this.props.children.toString(), {\n      sanatize: true\n    });\n    return __jsx(\"div\", {\n      className: \"row Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      className: \"close\",\n      onClick: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    })), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, this.props.author)), __jsx(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12 Comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: rawMarkup\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nReactDOM.render(__jsx(CommentBox, {\n  url: \"https://codepen.io/Kikoku/pen/Qbwmpb.js\",\n  data: [],\n  pollInterval: 2000,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 17\n  }\n}), document.getElementById('App'));","map":{"version":3,"sources":["/Users/teddylin/Desktop/harvard-houses/pages/comments/index.js"],"names":["React","ReactCSSTransitionGroup","addons","CSSTransitionGroup","CommentBox","Component","constructor","props","state","data","handleCommentSubmit","bind","handleDelete","loadCommentsFromServer","$","ajax","url","dataType","success","setState","error","xhr","status","err","console","toString","componentDidMount","comment","comments","newComments","concat","type","proprs","index","splice","render","CommentForm","handleSubmit","onChange","author","text","e","target","name","value","preventDefault","onCommentSubmit","trim","CommentList","commentNodes","map","i","Comment","keyValue","rawMarkup","marked","children","sanatize","__html","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\n\nlet ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;\n\nclass CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {data: props.data};\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      success: (data) => {\n        this.setState({data: data});\n      },\n      error:(xhr, status, err) => {\n        console.error(this.props.url, status, err.toString());\n      }\n    });\n  }\n  componentDidMount() {\n    this.loadCommentsFromServer();\n\n    // Disabled Polling because the 'server' never updates\n    // it is just a static file with two comments\n    // setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n  }\n  handleCommentSubmit(comment) {\n\n    let comments = this.state.data;\n\n    let newComments = comments.concat([comment]);\n\n    this.setState({\n      data: newComments\n    });\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      type: 'POST',\n      data: comment,\n      success: (data) => {\n        this.setState({data: data});\n      },\n      error: (xhr, status, err) => {\n        console.error(this.proprs.url, status, err.toString());\n      }\n    });\n  }\n  handleDelete(index) {\n\n    let comments = this.state.data;\n\n    comments.splice(index, 1);\n\n    this.setState({\n      data: comments\n    })\n  }\n  render() {\n    return(\n      <div className=\"col-xs-10 col-xs-offset-1 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n        <CommentForm onCommentSubmit={this.handleCommentSubmit}/>\n        <CommentList data={this.state.data} handleDelete={this.handleDelete}/>\n      </div>\n    )\n  }\n}\n\nclass CommentForm extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = this.setState({\n      author: '',\n      text: ''\n    })\n  }\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    if(!this.state.text || !this.state.author) {\n      return;\n    }\n    this.props.onCommentSubmit({author: this.state.author.trim(), text: this.state.text.trim()});\n    this.setState({\n      author: '',\n      text: ''\n    })\n    return;\n  }\n  render(){\n    return (\n      <form onSubmit={this.handleSubmit} className=\"row Container\">\n        <div className=\"col-xs-12\">\n          <h1>Comments</h1>\n        </div>\n        <div className=\"col-xs-12\">\n          <input type=\"text\" placeholder=\"Your name\" name=\"author\" onChange={this.onChange} ref=\"author\"/>\n        </div>\n        <div className=\"col-xs-12\">\n          <input type=\"text\" placeholder=\"Say something...\" name=\"text\" onChange={this.onChange} ref=\"text\"/>\n        </div>\n        <div className=\"col-xs-12\">\n          <input type=\"submit\" value=\"Post\" />\n        </div>\n      </form>\n    )\n  }\n}\n\nclass CommentList extends React.Component {\n  render() {\n    let handleDelete = this.props.handleDelete;\n\n    let commentNodes = this.props.data.map((comment, i) => {\n      return (\n        <Comment author={comment.author} keyValue={i} handleDelete={handleDelete}>\n          {comment.text}\n        </Comment>\n      )\n    });\n    return (\n      <ReactCSSTransitionGroup transitionName=\"example\">\n        {commentNodes}\n      </ReactCSSTransitionGroup>\n    )\n  }\n};\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n  handleDelete() {\n    this.props.handleDelete(this.props.keyValue);\n  }\n  render() {\n    let rawMarkup = marked(this.props.children.toString(), {sanatize: true});\n    return(\n      <div className=\"row Container\">\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <span className=\"close\" onClick={this.handleDelete}>\n            <i className=\"fa fa-trash\" />\n          </span>\n          <h2>\n            {this.props.author}\n          </h2>\n        </div>\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 Comment\">\n          <span dangerouslySetInnerHTML = {{__html: rawMarkup}} />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<CommentBox url=\"https://codepen.io/Kikoku/pen/Qbwmpb.js\" data={[]} pollInterval={2000}/>, document.getElementById('App'));\n"]},"metadata":{},"sourceType":"module"}