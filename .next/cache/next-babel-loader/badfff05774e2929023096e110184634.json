{"ast":null,"code":"var _jsxFileName = \"/Users/teddylin/Desktop/harvard-houses/pages/house/commentbox.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport CommentBox from 'react-commentbox';\nexport default class MyCommentBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      authorName: '',\n      authorNameIsSet: false\n    });\n\n    _defineProperty(this, \"onChangeAuthorName\", e => this.setState({\n      authorName: e.currentTarget.value\n    }));\n\n    _defineProperty(this, \"onSubmitAuthorName\", e => {\n      e.preventDefault();\n      this.setState({\n        authorNameIsSet: true\n      });\n    });\n\n    _defineProperty(this, \"normalizeComment\", comment => {\n      const {\n        id,\n        createdAt\n      } = comment.sys;\n      const {\n        body,\n        author,\n        parentComment\n      } = comment.fields;\n      return {\n        id,\n        bodyDisplay: body,\n        userNameDisplay: author,\n        timestampDisplay: createdAt.split('T')[0],\n        belongsToAuthor: false,\n        parentCommentId: parentComment ? parentComment.sys.id : null\n      };\n    });\n\n    _defineProperty(this, \"comment\", (body, parentCommentId) => {\n      return this.props.postData('/create-comment', {\n        body,\n        parentCommentId,\n        authorName: this.state.authorName,\n        subjectId: this.props.subjectId\n      });\n    });\n\n    _defineProperty(this, \"disabledComponent\", props => {\n      return __jsx(\"form\", {\n        onSubmit: this.onSubmitAuthorName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name to post a comment\",\n        value: this.state.authorName,\n        onChange: this.onChangeAuthorName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"Submit\"));\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, __jsx(CommentBox, {\n      disabled: !this.state.authorNameIsSet,\n      getComments: this.getComments,\n      normalizeComment: this.normalizeComment,\n      comment: this.comment,\n      disabledComponent: this.disabledComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/teddylin/Desktop/harvard-houses/pages/house/commentbox.js"],"names":["React","CommentBox","MyCommentBox","Component","authorName","authorNameIsSet","e","setState","currentTarget","value","preventDefault","comment","id","createdAt","sys","body","author","parentComment","fields","bodyDisplay","userNameDisplay","timestampDisplay","split","belongsToAuthor","parentCommentId","props","postData","state","subjectId","onSubmitAuthorName","onChangeAuthorName","render","getComments","normalizeComment","disabledComponent"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;;AAAA,mCAE9C;AAAEC,MAAAA,UAAU,EAAE,EAAd;AAAkBC,MAAAA,eAAe,EAAE;AAAnC,KAF8C;;AAAA,gDAIhCC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEH,MAAAA,UAAU,EAAEE,CAAC,CAACE,aAAF,CAAgBC;AAA9B,KAAd,CAJ0B;;AAAA,gDAMhCH,CAAD,IAAO;AAExBA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKH,QAAL,CAAc;AAAEF,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACH,KAVqD;;AAAA,8CA2BlCM,OAAD,IAAa;AAE5B,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAoBF,OAAO,CAACG,GAAlC;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,MAAR;AAAgBC,QAAAA;AAAhB,UAAkCN,OAAO,CAACO,MAAhD;AAEA,aAAO;AACHN,QAAAA,EADG;AAEHO,QAAAA,WAAW,EAAEJ,IAFV;AAGHK,QAAAA,eAAe,EAAEJ,MAHd;AAIHK,QAAAA,gBAAgB,EAAER,SAAS,CAACS,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAJf;AAKHC,QAAAA,eAAe,EAAE,KALd;AAMHC,QAAAA,eAAe,EAAEP,aAAa,GAAGA,aAAa,CAACH,GAAd,CAAkBF,EAArB,GAA0B;AANrD,OAAP;AAQH,KAxCqD;;AAAA,qCA2C5C,CAACG,IAAD,EAAOS,eAAP,KAA2B;AAEjC,aAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoB,iBAApB,EAAuC;AAC1CX,QAAAA,IAD0C;AAE1CS,QAAAA,eAF0C;AAG1CpB,QAAAA,UAAU,EAAE,KAAKuB,KAAL,CAAWvB,UAHmB;AAI1CwB,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG;AAJoB,OAAvC,CAAP;AAMH,KAnDqD;;AAAA,+CAsDjCH,KAAD,IAAW;AAE3B,aACI;AAAM,QAAA,QAAQ,EAAG,KAAKI,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,mCAFhB;AAGI,QAAA,KAAK,EAAG,KAAKF,KAAL,CAAWvB,UAHvB;AAII,QAAA,QAAQ,EAAG,KAAK0B,kBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CADJ;AAWH,KAnEqD;AAAA;;AAqEtDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AACI,MAAA,QAAQ,EAAG,CAAC,KAAKJ,KAAL,CAAWtB,eAD3B;AAEI,MAAA,WAAW,EAAG,KAAK2B,WAFvB;AAGI,MAAA,gBAAgB,EAAG,KAAKC,gBAH5B;AAII,MAAA,OAAO,EAAG,KAAKtB,OAJnB;AAKI,MAAA,iBAAiB,EAAG,KAAKuB,iBAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAWH;;AAlFqD","sourcesContent":["import React from 'react';\nimport CommentBox from 'react-commentbox';\n\nexport default class MyCommentBox extends React.Component {\n\n    state = { authorName: '', authorNameIsSet: false };\n\n    onChangeAuthorName = (e) => this.setState({ authorName: e.currentTarget.value });\n\n    onSubmitAuthorName = (e) => {\n\n        e.preventDefault();\n        this.setState({ authorNameIsSet: true });\n    };\n\n    // fetch our comments from Contentful\n    // getComments = () => {\n    //\n    //     return this.props.contentfulClient.getEntries({\n    //         'order': 'sys.createdAt', // important for determining nested comments\n    //         'content_type': 'comment',\n    //         'fields.subject': this.props.subjectId,\n    //     }).then( response => {\n    //\n    //         return response.items;\n    //\n    //     }).catch(console.error);\n    // };\n\n    // transform Contentful entries to objects that react-commentbox expects.\n    normalizeComment = (comment) => {\n\n        const { id, createdAt } = comment.sys;\n        const { body, author, parentComment } = comment.fields;\n\n        return {\n            id,\n            bodyDisplay: body,\n            userNameDisplay: author,\n            timestampDisplay: createdAt.split('T')[0],\n            belongsToAuthor: false,\n            parentCommentId: parentComment ? parentComment.sys.id : null\n        };\n    };\n\n    // make an API call to post a comment\n    comment = (body, parentCommentId) => {\n\n        return this.props.postData('/create-comment', {\n            body,\n            parentCommentId,\n            authorName: this.state.authorName,\n            subjectId: this.props.subjectId\n        });\n    };\n\n    // will be shown when the comment box is disabled\n    disabledComponent = (props) => {\n\n        return (\n            <form onSubmit={ this.onSubmitAuthorName }>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter your name to post a comment\"\n                    value={ this.state.authorName }\n                    onChange={ this.onChangeAuthorName }\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        );\n    };\n\n    render() {\n\n        return (\n            <div>\n                <CommentBox\n                    disabled={ !this.state.authorNameIsSet }\n                    getComments={ this.getComments }\n                    normalizeComment={ this.normalizeComment }\n                    comment={ this.comment }\n                    disabledComponent={ this.disabledComponent }\n                />\n            </div>\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}